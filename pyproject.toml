[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "refactored-duoformer"
version = "2.0.0"
description = "Production-ready DuoFormer for medical image classification"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Ali Serwat", email = "ali.servat79@gmail.com"}
]
maintainers = [
    {name = "Ali Serwat", email = "ali.servat79@gmail.com"}
]
keywords = ["medical-imaging", "vision-transformer", "deep-learning", "pytorch"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
]
requires-python = ">=3.10"
dependencies = [
    # Core deep learning
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "timm>=0.9.0",
    "einops>=0.7.0",

    # Data and visualization
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "pillow>=10.0.0",
    "tqdm>=4.65.0",

    # ML utilities
    "scikit-learn>=1.3.0",
    "pandas>=2.0.0",

    # Configuration and logging
    "pyyaml>=6.0",
    "tensorboard>=2.13.0",

    # Notebook support
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
    "ipywidgets>=8.0.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",

    # Code quality
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "types-PyYAML>=6.0.0",
    "types-requests>=2.31.0",

    # Development tools
    "pre-commit>=3.4.0",
    "bandit>=1.7.5",
    "pip-tools>=7.3.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
]
jupyter = [
    "jupyterlab-git>=0.44.0",
    "jupyterlab-code-formatter>=2.2.0",
    "jupyterlab-lsp>=5.0.0",
    "jupyterlab-snippets>=0.4.0",
]

[project.urls]
"Homepage" = "https://github.com/AliSerwat/Refactored-DuoFormer"
"Bug Reports" = "https://github.com/AliSerwat/Refactored-DuoFormer/issues"
"Source" = "https://github.com/AliSerwat/Refactored-DuoFormer"
"Documentation" = "https://github.com/AliSerwat/Refactored-DuoFormer/docs"

[project.scripts]
duoformer-train = "train:main"
duoformer-setup = "setup_environment:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["duoformer*"]
exclude = ["tests*", "legacy*"]

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | legacy
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
# Gradual typing: start lenient, gradually enable stricter checks
disallow_untyped_defs = false  # TODO: Enable for new code
disallow_incomplete_defs = false  # TODO: Enable for new code
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
pretty = true

# Stricter settings for new modules (example)
[[tool.mypy.overrides]]
module = "duoformer.config.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "torchvision.*",
    "timm.*",
    "einops.*",
    "matplotlib.*",
    "seaborn.*",
    "sklearn.*",
    "pandas.*",
    "PIL.*",
    "tqdm.*",
    "tensorboard.*",
    "jupyter.*",
    "ipywidgets.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --disable-warnings"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src/duoformer"]
omit = [
    "*/tests/*",
    "*/legacy/*",
    "setup_environment.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "legacy"]
skips = ["B101", "B601"]
