# GitHub Actions Workflow for Testing DuoFormer Environment Setup
name: Test Environment Setup

on:
  push:
    branches: [ main, by-claude-4.1-opus ]
    paths:
      - 'requirements.in'
      - 'requirements.txt'
      - 'setup_environment.py'
      - '.github/workflows/test-environment.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'requirements.in'
      - 'requirements.txt'
      - 'setup_environment.py'

jobs:
  test-setup:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Display Python version
      run: python --version

    - name: Run setup environment script (compile only)
      run: python setup_environment.py --compile-only

    - name: Validate requirements.txt exists
      run: |
        if [ ! -f requirements.txt ]; then
          echo "Error: requirements.txt was not generated"
          exit 1
        fi
      shell: bash

    - name: Install dependencies
      run: python setup_environment.py --install-only

    - name: Validate environment
      run: python -m pip check

    - name: Test imports
      run: |
        python -c "import torch; print(f'PyTorch: {torch.__version__}')"
        python -c "import torchvision; print(f'TorchVision: {torchvision.__version__}')"
        python -c "import timm; print(f'timm: {timm.__version__}')"
        python -c "import sklearn; print(f'scikit-learn: {sklearn.__version__}')"

    - name: Display installed packages
      run: python -m pip list

  lint-requirements:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install pip-tools
      run: python -m pip install pip-tools

    - name: Check if requirements.txt is up to date
      run: |
        pip-compile --generate-hashes -o requirements-check.txt requirements.in
        if ! diff -q requirements.txt requirements-check.txt > /dev/null; then
          echo "Error: requirements.txt is out of date. Please run: python setup_environment.py --compile-only"
          exit 1
        fi

